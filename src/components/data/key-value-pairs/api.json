{
  "name": "KeyValuePairs",
  "dashCaseName": "key-value-pairs",
  "releaseStatus": "stable",
  "regions": [],
  "functions": [],
  "properties": [
    {
      "name": "ariaLabel",
      "type": "string",
      "optional": true,
      "description": "Provides an `aria-label` to the Key-value pairs container.\nDon't use `ariaLabel` and `ariaLabelledby` at the same time."
    },
    {
      "name": "ariaLabelledby",
      "type": "string",
      "optional": true,
      "description": "Sets the `aria-labelledby` property on the Key-value pairs container.\nIf there's a visible label element that you can reference, use this instead of `ariaLabel`.\nDon't use `ariaLabel` and `ariaLabelledby` at the same time."
    },
    {
      "name": "className",
      "type": "string",
      "optional": true,
      "description": "Adds the specified classes to the root element of the component.",
      "deprecatedTag": "Custom CSS is not supported. For testing and other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)."
    },
    {
      "name": "columns",
      "type": "number",
      "optional": true,
      "description": "Specifies the number of columns in each grid row.\nValid values are any integer between 1 and 4. It defaults to 1.",
      "defaultValue": "1"
    },
    {
      "name": "id",
      "type": "string",
      "optional": true,
      "description": "Adds the specified ID to the root element of the component.",
      "deprecatedTag": "The usage of the `id` attribute is reserved for internal use cases. For testing and other use cases,\nuse [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes). If you must\nuse the `id` attribute, consider setting it on a parent element instead."
    },
    {
      "name": "items",
      "type": "ReadonlyArray<KeyValuePairsProps.Item>",
      "optional": false,
      "description": "An array of either key-value pairs individual items or groups.\nThey could be combined.\nEach item has `type` prop, which might be either `group` or `pair`. Defaults to `pair` if not specified.\n\nEach key-value pair definition has the following properties:\n  * `type` (string) - (Optional) Item type (pair).\n  * `label` (string) - The key label.\n  * `info` (React.ReactNode) - (Optional) Area next to the key to display an info link.\n  * `value` (React.ReactNode) - The corresponding value for the key.\n\nEach group definition has the following properties:\n  * `type` (string) - Item type (group).\n  * `title` (string) - (Optional) An optional title for this column.\n  * `items` (ReadonlyArray<KeyValuePairProps.KeyValuePair>) - An array of\n    key-value pair items."
    },
    {
      "name": "minColumnWidth",
      "type": "number",
      "optional": true,
      "description": "Use to specify the desired minimum width for each column in pixels.\n\nThe number of columns is determined by the value of this property, the available space,\nand the maximum number of columns as defined by the `columns` property.\nIf not set, defaults to 150.",
      "defaultValue": "150"
    }
  ],
  "events": [],
  "_meta": {
    "component": "key-value-pairs",
    "source": "key-value-pairs.js",
    "extracted_at": "/Users/troymolander/Development/cloudscape-design/components/lib/components-definitions/components/key-value-pairs.js"
  }
}