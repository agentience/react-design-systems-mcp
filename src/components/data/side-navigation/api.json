{
  "name": "SideNavigation",
  "dashCaseName": "side-navigation",
  "releaseStatus": "stable",
  "regions": [
    {
      "name": "itemsControl",
      "description": "A slot located below the header and above the items.",
      "isDefault": false
    }
  ],
  "functions": [],
  "properties": [
    {
      "name": "activeHref",
      "type": "string",
      "optional": true,
      "description": "Specifies the `href` of the currently active link.\nAll items within the navigation with a matching `href` are highlighted.\n\n`Sections` and `Expandable Page Groups` that contain a highlighted item\nare automatically expanded, unless their definitions have the `defaultExpanded`\nproperty explicitly set to `false`."
    },
    {
      "name": "className",
      "type": "string",
      "optional": true,
      "description": "Adds the specified classes to the root element of the component.",
      "deprecatedTag": "Custom CSS is not supported. For testing and other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)."
    },
    {
      "name": "header",
      "type": "SideNavigationProps.Header",
      "inlineType": {
        "name": "SideNavigationProps.Header",
        "type": "object",
        "properties": [
          {
            "name": "href",
            "type": "string",
            "optional": false
          },
          {
            "name": "logo",
            "type": "SideNavigationProps.Logo",
            "optional": true
          },
          {
            "name": "text",
            "type": "string",
            "optional": true
          }
        ]
      },
      "optional": true,
      "description": "Controls the header that appears at the top of the navigation component.\n\nIt contains the following:\n- `text` (string) - Specifies the header text.\n- `href` (string) - Specifies the `href` that the header links to.\n- `logo` (object) - Specifies a logo image."
    },
    {
      "name": "id",
      "type": "string",
      "optional": true,
      "description": "Adds the specified ID to the root element of the component.",
      "deprecatedTag": "The usage of the `id` attribute is reserved for internal use cases. For testing and other use cases,\nuse [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes). If you must\nuse the `id` attribute, consider setting it on a parent element instead."
    },
    {
      "name": "items",
      "type": "ReadonlyArray<SideNavigationProps.Item>",
      "optional": true,
      "description": "Specifies the items to be displayed in the navigation.\nAllowed objects are: `Link`, `Divider`, `Section`, `LinkGroup` and `ExpandableLinkGroup`.\n\nYou can inject extra properties (for example, an ID)\nin order to identify the item when it's used in an event `detail`\n(for more information, see the events section below).\n\n#### Link\nObject that represents an anchor in the navigation.\nLinks are rendered as `<a>` tags.\n- `type` - `'link'`.\n- `text` (string) - Specifies the link text.\n- `href` (string) - Specifies the `href` of the link.\n- `external` (boolean) - Determines whether to display an external link icon next to the link.\n     If set to `true`, an external link icon appears next to the link.\n     The anchor also has the attributes `target=\"_blank\"` and `rel=\"noopener\"`.\n     Additionally, the `activeHref` property won't be modified when a user chooses the link.\n- `externalIconAriaLabel` (string) - Adds an aria-label to the external icon.\n- `info` (ReactNode) - Enables you to display content next to the link. Although it is technically possible to insert any content,\n    our UX guidelines allow only to add a Badge and/or a \"New\" label.\n\n#### Divider\nObject that represents a horizontal divider between navigation content.\nIt contains `type`: `'divider'` only.\n\n#### Section\nObject that represents a section within the navigation.\n- `type`: `'section'`.\n- `text` (string) - Specifies the text to display as a title of the section.\n- `defaultExpanded` (boolean) - Determines whether the section should be expanded by default. Default value is `true`.\n- `items` (array) - Specifies the content of the section. You can use any valid item from this list.\n    Although there is no technical limitation to the nesting level,\n    our UX recommendation is to use only one level.\n\n#### Section Group\nAggregates a set of items that are conceptually related to each other, and can be displayed under a single heading to provide further organization.\nYou can nest sections, links, link groups and expandable link groups within a section group depending on your information architecture needs.\n- `type`: `'section-group'`.\n- `title` (string) - Specifies the text to display as a title of the section group.\n- `items` (array) - Specifies the content of the section header group. You can use `Section`, `Link`, `LinkGroup`, `ExpandableLinkGroup`.\n\n#### LinkGroup\nObject that represents a group of links.\n- `type`: `'link-group'`.\n- `text` (string) - Specifies the text of the group link.\n- `href` (string) - Specifies the `href` of the group link.\n- `info` (ReactNode) - Enables you to display content next to the link. Although it is technically possible to insert any content,\n    our UX guidelines allow only to add a Badge and/or a \"New\" label.\n- `items` (array) - Specifies the content of the section. You can use any valid item from this list.\n    Although there is no technical limitation to the nesting level,\n    our UX recommendation is to use only one level.\n\n#### ExpandableLinkGroup\n\nObject that represents an expandable group of links.\n- `type`: `'expandable-link-group'`.\n- `text` (string) - Specifies the text of the group link.\n- `href` (string) - Specifies the `href` of the group link.\n- `defaultExpanded` (boolean) - Specifies whether the group should be expanded by default.\n   If not explicitly set, the group is collapsed by default, unless one of the nested links is active.\n- `items` (array) - Specifies the content of the section. You can use any valid item from this list.\n    Although there is no technical limitation to the nesting level,\n    our UX recommendation is to use only one level.",
      "defaultValue": "[]"
    }
  ],
  "events": [
    {
      "name": "onChange",
      "description": "Fired when the expansion state of `Section` or `ExpandablePageGroup` items changes\nas a result of a user interaction. The event `detail` contains an object with information about the changed item.\n\n- `item` (object) - Specifies the item that was changed.\n- `expanded` (boolean) - Specifies whether the item is expanded or not.\n- `expandableParents` (array) - A list of parent items that have a type of `Section`\n    or `ExpandablePageGroup`. Use this `expandableParents` array to set their expanded\n    state to `true` if you want your data model to keep track of the current state\n    of the navigation items.\n\nNote: If the expansion is a result of the activation of a nested link\nupon changing the `activeHref` property, this event isn't raised.",
      "cancelable": false,
      "detailType": "SideNavigationProps.ChangeDetail",
      "detailInlineType": {
        "name": "SideNavigationProps.ChangeDetail",
        "type": "object",
        "properties": [
          {
            "name": "expandableParents",
            "type": "ReadonlyArray<SideNavigationProps.Section | SideNavigationProps.ExpandableLinkGroup>",
            "optional": false
          },
          {
            "name": "expanded",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "item",
            "type": "SideNavigationProps.Section | SideNavigationProps.ExpandableLinkGroup",
            "optional": false
          }
        ]
      }
    },
    {
      "name": "onFollow",
      "description": "Fired when an anchor is clicked without any modifier (that is, CTRL, ALT, SHIFT).\nThe event `detail` contains a definition of the clicked item.\nUse this event to prevent default browser navigation (by calling `preventDefault` method)\nand branch your own routing.\n\nIf the event is prevented the `activeHref` property won't be automatically set\nto the href of the clicked item so you'll have to do it yourself.",
      "cancelable": true,
      "detailType": "SideNavigationProps.FollowDetail",
      "detailInlineType": {
        "name": "SideNavigationProps.FollowDetail",
        "type": "object",
        "properties": [
          {
            "name": "external",
            "type": "boolean",
            "optional": true
          },
          {
            "name": "href",
            "type": "string",
            "optional": false
          },
          {
            "name": "info",
            "type": "React.ReactNode",
            "optional": true
          },
          {
            "name": "target",
            "type": "string",
            "optional": true
          },
          {
            "name": "text",
            "type": "string",
            "optional": true
          },
          {
            "name": "type",
            "type": "\"link\" | \"section-header\" | \"link-group\" | \"expandable-link-group\"",
            "optional": true
          }
        ]
      }
    }
  ],
  "_meta": {
    "component": "side-navigation",
    "source": "side-navigation.js",
    "extracted_at": "/Users/troymolander/Development/cloudscape-design/components/lib/components-definitions/components/side-navigation.js"
  }
}