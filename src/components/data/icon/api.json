{
  "name": "Icon",
  "dashCaseName": "icon",
  "releaseStatus": "stable",
  "regions": [
    {
      "name": "svg",
      "description": "Specifies the SVG of a custom icon.\n\nUse this property if the icon you want isn't available, and you want your custom icon to inherit colors dictated by variant or hover states.\nWhen this property is set, the component will be decorated with `aria-hidden=\"true\"`. Ensure that the `svg` element:\n- has attribute `focusable=\"false\"`.\n- has `viewBox=\"0 0 16 16\"`.\n\nIf you set the `svg` element as the root node of the slot, the component will automatically\n- set `stroke=\"currentColor\"`, `fill=\"none\"`, and `vertical-align=\"top\"`.\n- set the stroke width based on the size of the icon.\n- set the width and height of the SVG element based on the size of the icon.\n\nIf you don't want these styles to be automatically set, wrap the `svg` element into a `span` and ensure icon `size` is not set to `inherit`.\nYou can still set the stroke to `currentColor` to inherit the color of the surrounding elements.\n\nIf you set both `url` and `svg`, `svg` will take precedence.\n\n*Note:* Remember to remove any additional elements (for example: `defs`) and related CSS classes from SVG files exported from design software.\nIn most cases, they aren't needed, as the `svg` element inherits styles from the icon component.",
      "isDefault": false
    }
  ],
  "functions": [],
  "properties": [
    {
      "name": "alt",
      "type": "string",
      "optional": true,
      "description": "Specifies alternate text for a custom icon (using the `url` attribute).\nThis property is ignored if you use a predefined icon or if you set your custom icon using the `svg` slot.",
      "deprecatedTag": "Use `ariaLabel` instead."
    },
    {
      "name": "ariaLabel",
      "type": "string",
      "optional": true,
      "description": "Specifies alternate text for the icon. We recommend that you provide this for accessibility."
    },
    {
      "name": "className",
      "type": "string",
      "optional": true,
      "description": "Adds the specified classes to the root element of the component.",
      "deprecatedTag": "Custom CSS is not supported. For testing and other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)."
    },
    {
      "name": "id",
      "type": "string",
      "optional": true,
      "description": "Adds the specified ID to the root element of the component.",
      "deprecatedTag": "The usage of the `id` attribute is reserved for internal use cases. For testing and other use cases,\nuse [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes). If you must\nuse the `id` attribute, consider setting it on a parent element instead."
    },
    {
      "name": "name",
      "type": "string",
      "inlineType": {
        "name": "IconProps.Name",
        "type": "union",
        "values": [
          "search",
          "map",
          "filter",
          "key",
          "file",
          "pause",
          "play",
          "remove",
          "copy",
          "menu",
          "script",
          "close",
          "status-pending",
          "refresh",
          "external",
          "group",
          "calendar",
          "ellipsis",
          "zoom-in",
          "zoom-out",
          "download",
          "security",
          "edit",
          "add-plus",
          "anchor-link",
          "angle-left-double",
          "angle-left",
          "angle-right-double",
          "angle-right",
          "angle-up",
          "angle-down",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "arrow-down",
          "audio-full",
          "audio-half",
          "audio-off",
          "backward-10-seconds",
          "bug",
          "call",
          "caret-down-filled",
          "caret-down",
          "caret-left-filled",
          "caret-right-filled",
          "caret-up-filled",
          "caret-up",
          "check",
          "contact",
          "closed-caption",
          "closed-caption-unavailable",
          "command-prompt",
          "delete-marker",
          "drag-indicator",
          "envelope",
          "exit-full-screen",
          "expand",
          "face-happy",
          "face-happy-filled",
          "face-neutral",
          "face-neutral-filled",
          "face-sad",
          "face-sad-filled",
          "file-open",
          "flag",
          "folder-open",
          "folder",
          "forward-10-seconds",
          "full-screen",
          "gen-ai",
          "globe",
          "grid-view",
          "group-active",
          "heart",
          "heart-filled",
          "insert-row",
          "keyboard",
          "list-view",
          "location-pin",
          "lock-private",
          "microphone",
          "microphone-off",
          "mini-player",
          "multiscreen",
          "notification",
          "redo",
          "resize-area",
          "settings",
          "send",
          "share",
          "shrink",
          "star-filled",
          "star-half",
          "star",
          "status-in-progress",
          "status-info",
          "status-negative",
          "status-positive",
          "status-stopped",
          "status-warning",
          "subtract-minus",
          "suggestions",
          "support",
          "thumbs-down-filled",
          "thumbs-down",
          "thumbs-up-filled",
          "thumbs-up",
          "ticket",
          "transcript",
          "treeview-collapse",
          "treeview-expand",
          "undo",
          "unlocked",
          "upload-download",
          "upload",
          "user-profile-active",
          "user-profile",
          "video-off",
          "video-on",
          "video-unavailable",
          "video-camera-off",
          "video-camera-on",
          "video-camera-unavailable",
          "view-full",
          "view-horizontal",
          "view-vertical",
          "zoom-to-fit"
        ]
      },
      "optional": true,
      "description": "Specifies the icon to be displayed."
    },
    {
      "name": "size",
      "type": "string",
      "inlineType": {
        "name": "IconProps.Size",
        "type": "union",
        "values": [
          "big",
          "small",
          "normal",
          "medium",
          "inherit",
          "large"
        ]
      },
      "optional": true,
      "description": "Specifies the size of the icon.\n\nIf you set size to `inherit`, an icon size will be assigned based on the icon's inherited line height.\nFor icons used alongside text, ensure the icon is placed inside the acompanying text tag.\nThe icon will be vertically centered based on the height.",
      "defaultValue": "'normal'",
      "visualRefreshTag": "`medium` size"
    },
    {
      "name": "url",
      "type": "string",
      "optional": true,
      "description": "Specifies the URL of a custom icon. Use this property if the icon you want isn't available, and your custom icon cannot be an SVG.\nFor SVG icons, use the `svg` slot instead.\n\nIf you set both `url` and `svg`, `svg` will take precedence."
    },
    {
      "name": "variant",
      "type": "string",
      "inlineType": {
        "name": "IconProps.Variant",
        "type": "union",
        "values": [
          "link",
          "normal",
          "error",
          "disabled",
          "success",
          "warning",
          "inverted",
          "subtle"
        ]
      },
      "optional": true,
      "description": "Specifies the color variant of the icon. The `normal` variant picks up the current color of its context.",
      "defaultValue": "'normal'"
    }
  ],
  "events": [],
  "_meta": {
    "component": "icon",
    "source": "icon.js",
    "extracted_at": "/Users/troymolander/Development/cloudscape-design/components/lib/components-definitions/components/icon.js"
  }
}