{
  "name": "Link",
  "dashCaseName": "link",
  "releaseStatus": "stable",
  "regions": [
    {
      "name": "children",
      "description": "The text to render inside the link.",
      "isDefault": true
    }
  ],
  "functions": [
    {
      "name": "focus",
      "description": "Sets the browser focus on the anchor element.",
      "returnType": "void",
      "parameters": []
    }
  ],
  "properties": [
    {
      "name": "ariaLabel",
      "type": "string",
      "optional": true,
      "description": "Adds an aria-label to the HTML element."
    },
    {
      "name": "className",
      "type": "string",
      "optional": true,
      "description": "Adds the specified classes to the root element of the component.",
      "deprecatedTag": "Custom CSS is not supported. For testing and other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)."
    },
    {
      "name": "color",
      "type": "string",
      "inlineType": {
        "name": "LinkProps.Color",
        "type": "union",
        "values": [
          "normal",
          "inverted"
        ]
      },
      "optional": true,
      "description": "Determines the text color of the link and its icon.\n\n- `normal`: Use in most cases where a link is required.\n- `inverted`: Use to style links inside Flashbars.\n\nThis property is overridden if the variant is `info`.",
      "defaultValue": "'normal'"
    },
    {
      "name": "external",
      "type": "boolean",
      "optional": true,
      "description": "Marks the link as external by adding an icon after the text. If `href`\nis provided, opens the link in a new tab when clicked.",
      "defaultValue": "false"
    },
    {
      "name": "externalIconAriaLabel",
      "type": "string",
      "optional": true,
      "description": "Adds an aria-label to the external icon.",
      "i18nTag": true
    },
    {
      "name": "fontSize",
      "type": "string",
      "inlineType": {
        "name": "LinkProps.FontSize",
        "type": "union",
        "values": [
          "inherit",
          "body-s",
          "body-m",
          "heading-xs",
          "heading-s",
          "heading-m",
          "heading-l",
          "heading-xl",
          "display-l"
        ]
      },
      "optional": true,
      "description": "Determines the font size and line height.\nThis property is overridden if the variant is `info`.",
      "defaultValue": "'body-m'"
    },
    {
      "name": "href",
      "type": "string",
      "optional": true,
      "description": "The URL that the link points to.\nIf an `href` is not provided, the component will render using a\n\"button\" role and `target` will not be used."
    },
    {
      "name": "id",
      "type": "string",
      "optional": true,
      "description": "Adds the specified ID to the root element of the component.",
      "deprecatedTag": "The usage of the `id` attribute is reserved for internal use cases. For testing and other use cases,\nuse [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes). If you must\nuse the `id` attribute, consider setting it on a parent element instead."
    },
    {
      "name": "rel",
      "type": "string",
      "optional": true,
      "description": "Adds a `rel` attribute to the link. If the `rel` property is provided, it overrides the default behaviour.\nBy default, the component sets the `rel` attribute to \"noopener noreferrer\" when `external` is `true` or `target` is `\"_blank\"`."
    },
    {
      "name": "target",
      "type": "string",
      "optional": true,
      "description": "Specifies where to open the linked URL. Set this to `_blank` to open the URL\nin a new tab. If you set this property to `_blank`, the component\nautomatically adds `rel=\"noopener noreferrer\"` to avoid performance\nand security issues.\n\nFor other options see the documentation for <a> tag's\n[target attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#target)."
    },
    {
      "name": "variant",
      "type": "string",
      "inlineType": {
        "name": "LinkProps.Variant",
        "type": "union",
        "values": [
          "info",
          "primary",
          "secondary",
          "awsui-value-large"
        ]
      },
      "optional": true,
      "description": "Determines the visual style of the link as follows:\n\n- `primary` - Displays the link text with bold styling for sufficient contrast with surrounding text.\n    Use this for links where the context doesn't imply interactivity such as\n    \"Learn more\" links and links within paragraphs.\n- `secondary` - Does not provide any additional indicators for interactivity (except for an underline when the user hovers over or focuses the link).\n    This can be used in cases where the interactivity is strongly implied by its context,\n    such as in a table or a list of external links.\n- `info` - Use for \"info\" links that link to content in a help panel.\n\nThe default is `secondary`, except inside the following components where it defaults to `primary`:\n- Table\n- Cards\n- Alert\n- Popover\n- Help Panel (main `content` only)"
    }
  ],
  "events": [
    {
      "name": "onClick",
      "description": "Called when the user clicks on the link. Do not use this handler for navigation, use the `onFollow` event instead.",
      "cancelable": false,
      "detailType": "ClickDetail",
      "detailInlineType": {
        "name": "ClickDetail",
        "type": "object",
        "properties": [
          {
            "name": "altKey",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "button",
            "type": "number",
            "optional": false
          },
          {
            "name": "ctrlKey",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "metaKey",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "shiftKey",
            "type": "boolean",
            "optional": false
          }
        ]
      }
    },
    {
      "name": "onFollow",
      "description": "Called when a link is clicked without any modifier keys. If the link has no `href` provided, it will be called on\nall clicks.\n\nIf you want to implement client-side routing yourself, use this event and prevent default browser navigation\n(by calling `preventDefault`).",
      "cancelable": true,
      "detailType": "BaseNavigationDetail",
      "detailInlineType": {
        "name": "BaseNavigationDetail",
        "type": "object",
        "properties": [
          {
            "name": "external",
            "type": "boolean",
            "optional": true
          },
          {
            "name": "href",
            "type": "string",
            "optional": true
          },
          {
            "name": "target",
            "type": "string",
            "optional": true
          }
        ]
      }
    }
  ],
  "_meta": {
    "component": "link",
    "source": "link.js",
    "extracted_at": "/Users/troymolander/Development/cloudscape-design/components/lib/components-definitions/components/link.js"
  }
}