{
  "name": "PromptInput",
  "dashCaseName": "prompt-input",
  "releaseStatus": "stable",
  "regions": [
    {
      "name": "actionButtonIconSvg",
      "description": "Specifies the SVG of a custom icon.\n\nUse this property if you want your custom icon to inherit colors dictated by variant or hover states.\nWhen this property is set, the component will be decorated with `aria-hidden=\"true\"`. Ensure that the `svg` element:\n- has attribute `focusable=\"false\"`.\n- has `viewBox=\"0 0 16 16\"`.\n\nIf you set the `svg` element as the root node of the slot, the component will automatically\n- set `stroke=\"currentColor\"`, `fill=\"none\"`, and `vertical-align=\"top\"`.\n- set the stroke width based on the size of the icon.\n- set the width and height of the SVG element based on the size of the icon.\n\nIf you don't want these styles to be automatically set, wrap the `svg` element into a `span`.\nYou can still set the stroke to `currentColor` to inherit the color of the surrounding elements.\n\nIf you set both `actionButtonIconUrl` and `actionButtonIconSvg`, `iconSvg` will take precedence.\n\n*Note:* Remember to remove any additional elements (for example: `defs`) and related CSS classes from SVG files exported from design software.\nIn most cases, they aren't needed, as the `svg` element inherits styles from the icon component.",
      "isDefault": false
    },
    {
      "name": "secondaryActions",
      "description": "Use this slot to add secondary actions to the prompt input.",
      "isDefault": false
    },
    {
      "name": "secondaryContent",
      "description": "Use this slot to add secondary content, such as file attachments, to the prompt input.",
      "isDefault": false
    }
  ],
  "functions": [
    {
      "name": "focus",
      "description": "Sets input focus on the textarea control.",
      "returnType": "void",
      "parameters": []
    },
    {
      "name": "select",
      "description": "Selects all text in the textarea control.",
      "returnType": "void",
      "parameters": []
    },
    {
      "name": "setSelectionRange",
      "description": "Selects a range of text in the textarea control.\n\nSee https://developer.mozilla.org/en-US/docs/Web/API/HTMLTextAreaElement/setSelectionRange\nfor more details on this method. Be aware that using this method in React has some\ncommon pitfalls: https://stackoverflow.com/questions/60129605/is-javascripts-setselectionrange-incompatible-with-react-hooks",
      "returnType": "void",
      "parameters": [
        {
          "name": "start",
          "type": "number | null"
        },
        {
          "name": "end",
          "type": "number | null"
        },
        {
          "name": "direction",
          "type": "\"none\" | \"forward\" | \"backward\""
        }
      ]
    }
  ],
  "properties": [
    {
      "name": "actionButtonAriaLabel",
      "type": "string",
      "optional": true,
      "description": "Adds an aria-label to the action button.",
      "i18nTag": true
    },
    {
      "name": "actionButtonIconAlt",
      "type": "string",
      "optional": true,
      "description": "Specifies alternate text for a custom icon. We recommend that you provide this for accessibility.\nThis property is ignored if you use a predefined icon or if you set your custom icon using the `iconSvg` slot."
    },
    {
      "name": "actionButtonIconName",
      "type": "string",
      "inlineType": {
        "name": "IconProps.Name",
        "type": "union",
        "values": [
          "search",
          "map",
          "filter",
          "key",
          "file",
          "pause",
          "play",
          "remove",
          "copy",
          "menu",
          "script",
          "close",
          "status-pending",
          "refresh",
          "external",
          "group",
          "calendar",
          "ellipsis",
          "zoom-in",
          "zoom-out",
          "download",
          "security",
          "edit",
          "add-plus",
          "anchor-link",
          "angle-left-double",
          "angle-left",
          "angle-right-double",
          "angle-right",
          "angle-up",
          "angle-down",
          "arrow-left",
          "arrow-right",
          "arrow-up",
          "arrow-down",
          "audio-full",
          "audio-half",
          "audio-off",
          "backward-10-seconds",
          "bug",
          "call",
          "caret-down-filled",
          "caret-down",
          "caret-left-filled",
          "caret-right-filled",
          "caret-up-filled",
          "caret-up",
          "check",
          "contact",
          "closed-caption",
          "closed-caption-unavailable",
          "command-prompt",
          "delete-marker",
          "drag-indicator",
          "envelope",
          "exit-full-screen",
          "expand",
          "face-happy",
          "face-happy-filled",
          "face-neutral",
          "face-neutral-filled",
          "face-sad",
          "face-sad-filled",
          "file-open",
          "flag",
          "folder-open",
          "folder",
          "forward-10-seconds",
          "full-screen",
          "gen-ai",
          "globe",
          "grid-view",
          "group-active",
          "heart",
          "heart-filled",
          "insert-row",
          "keyboard",
          "list-view",
          "location-pin",
          "lock-private",
          "microphone",
          "microphone-off",
          "mini-player",
          "multiscreen",
          "notification",
          "redo",
          "resize-area",
          "settings",
          "send",
          "share",
          "shrink",
          "star-filled",
          "star-half",
          "star",
          "status-in-progress",
          "status-info",
          "status-negative",
          "status-positive",
          "status-stopped",
          "status-warning",
          "subtract-minus",
          "suggestions",
          "support",
          "thumbs-down-filled",
          "thumbs-down",
          "thumbs-up-filled",
          "thumbs-up",
          "ticket",
          "transcript",
          "treeview-collapse",
          "treeview-expand",
          "undo",
          "unlocked",
          "upload-download",
          "upload",
          "user-profile-active",
          "user-profile",
          "video-off",
          "video-on",
          "video-unavailable",
          "video-camera-off",
          "video-camera-on",
          "video-camera-unavailable",
          "view-full",
          "view-horizontal",
          "view-vertical",
          "zoom-to-fit"
        ]
      },
      "optional": true,
      "description": "Determines what icon to display in the action button."
    },
    {
      "name": "actionButtonIconUrl",
      "type": "string",
      "optional": true,
      "description": "Specifies the URL of a custom icon. Use this property if the icon you want isn't available.\n\nIf you set both `actionButtonIconUrl` and `actionButtonIconSvg`, `actionButtonIconSvg` will take precedence."
    },
    {
      "name": "ariaDescribedby",
      "type": "string",
      "optional": true,
      "description": "Adds `aria-describedby` to the component. If you're using this component within a form field,\ndon't set this property because the form field component automatically sets it.\n\nUse this property if the component isn't surrounded by a form field, or you want to override the value\nautomatically set by the form field (for example, if you have two components within a single form field).\n\nTo use it correctly, define an ID for each element that you want to use as a description\nand set the property to a string of each ID separated by spaces (for example, `\"id1 id2 id3\"`)."
    },
    {
      "name": "ariaLabel",
      "type": "string",
      "optional": true,
      "description": "Adds an `aria-label` to the native control.\n\nUse this if you don't have a visible label for this control."
    },
    {
      "name": "ariaLabelledby",
      "type": "string",
      "optional": true,
      "description": "Adds `aria-labelledby` to the component. If you're using this component within a form field,\ndon't set this property because the form field component automatically sets it.\n\nUse this property if the component isn't surrounded by a form field, or you want to override the value\nautomatically set by the form field (for example, if you have two components within a single form field).\n\nTo use it correctly, define an ID for the element you want to use as label and set the property to that ID."
    },
    {
      "name": "ariaRequired",
      "type": "boolean",
      "optional": true,
      "description": "Specifies whether to add `aria-required` to the native control."
    },
    {
      "name": "autoComplete",
      "type": "string | boolean",
      "inlineType": {
        "name": "string | boolean",
        "type": "union",
        "values": [
          "string",
          "false",
          "true"
        ]
      },
      "optional": true,
      "description": "Specifies whether to enable a browser's autocomplete functionality for this input.\nIn some cases it might be appropriate to disable autocomplete (for example, for security-sensitive fields).\nTo use it correctly, set the `name` property.\n\nYou can either provide a boolean value to set the property to \"on\" or \"off\", or specify a string value\nfor the [autocomplete](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete) attribute."
    },
    {
      "name": "autoFocus",
      "type": "boolean",
      "optional": true,
      "description": "Indicates whether the control should be focused as\nsoon as the page loads, which enables the user to\nstart typing without having to manually focus the control. Don't\nuse this option on pages where the control may be\nscrolled out of the viewport."
    },
    {
      "name": "className",
      "type": "string",
      "optional": true,
      "description": "Adds the specified classes to the root element of the component.",
      "deprecatedTag": "Custom CSS is not supported. For testing and other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)."
    },
    {
      "name": "controlId",
      "type": "string",
      "optional": true,
      "description": "Specifies the ID of the native form element. You can use it to relate\na label element's `for` attribute to this control.\n\nIt defaults to an automatically generated ID that\nis provided by its parent form field component."
    },
    {
      "name": "disableActionButton",
      "type": "boolean",
      "optional": true,
      "description": "Specifies whether to disable the action button."
    },
    {
      "name": "disableBrowserAutocorrect",
      "type": "boolean",
      "optional": true,
      "description": "Specifies whether to disable browser autocorrect and related features.\nIf you set this to `true`, it disables any native browser capabilities\nthat automatically correct user input, such as `autocorrect` and\n`autocapitalize`. If you don't set it, the behavior follows the default behavior\nof the user's browser."
    },
    {
      "name": "disabled",
      "type": "boolean",
      "optional": true,
      "description": "Specifies if the control is disabled, which prevents the\nuser from modifying the value and prevents the value from\nbeing included in a form submission. A disabled control can't\nreceive focus."
    },
    {
      "name": "disableSecondaryActionsPaddings",
      "type": "boolean",
      "optional": true,
      "description": "Determines whether the secondary actions area of the input has padding. If true, removes the default padding from the secondary actions area."
    },
    {
      "name": "disableSecondaryContentPaddings",
      "type": "boolean",
      "optional": true,
      "description": "Determines whether the secondary content area of the input has padding. If true, removes the default padding from the secondary content area."
    },
    {
      "name": "id",
      "type": "string",
      "optional": true,
      "description": "Adds the specified ID to the root element of the component.",
      "deprecatedTag": "The usage of the `id` attribute is reserved for internal use cases. For testing and other use cases,\nuse [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes). If you must\nuse the `id` attribute, consider setting it on a parent element instead."
    },
    {
      "name": "invalid",
      "type": "boolean",
      "optional": true,
      "description": "Overrides the invalidation state. Usually the invalid state\ncomes from the parent `FormField`component,\nhowever sometimes you need to override its\nstate when you have more than one input within a\nsingle form field."
    },
    {
      "name": "maxRows",
      "type": "number",
      "optional": true,
      "description": "Specifies the maximum number of lines of text the textarea will expand to.\nDefaults to 3. Use -1 for infinite rows.",
      "defaultValue": "3"
    },
    {
      "name": "minRows",
      "type": "number",
      "optional": true,
      "description": "Specifies the minimum number of lines of text to set the height to.",
      "defaultValue": "1"
    },
    {
      "name": "name",
      "type": "string",
      "optional": true,
      "description": "Specifies the name of the control used in HTML forms."
    },
    {
      "name": "placeholder",
      "type": "string",
      "optional": true,
      "description": "Specifies the placeholder text rendered when the value is an empty string."
    },
    {
      "name": "readOnly",
      "type": "boolean",
      "optional": true,
      "description": "Specifies if the control is read-only, which prevents the\nuser from modifying the value but includes it in a form\nsubmission. A read-only control can receive focus.\n\nDon't use read-only inputs outside a form."
    },
    {
      "name": "spellcheck",
      "type": "boolean",
      "optional": true,
      "description": "Specifies the value of the `spellcheck` attribute on the native control.\nThis value controls the native browser capability to check for spelling/grammar errors.\nIf not set, the browser default behavior is to perform spellchecking.\nFor more details, check the [spellcheck MDN article](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/spellcheck).\n\nEnhanced spellchecking features of your browser and/or operating system may send input values to external parties.\nMake sure it’s deactivated for fields with sensitive information to prevent\ninadvertently sending data (such as user passwords) to third parties."
    },
    {
      "name": "value",
      "type": "string",
      "optional": false,
      "description": "Specifies the text entered into the form element."
    },
    {
      "name": "warning",
      "type": "boolean",
      "optional": true,
      "description": "Overrides the warning state. Usually the warning state\ncomes from the parent `FormField`component,\nhowever sometimes you need to override its\nstate when you have more than one input within a\nsingle form field.\nWhen you use it, provide additional context with\ninformation on the input state, and associate it\nwith the input using `ariaDescribedby`."
    }
  ],
  "events": [
    {
      "name": "onAction",
      "description": "Called whenever a user clicks the action button or presses the \"Enter\" key.\nThe event `detail` contains the current value of the field.",
      "cancelable": false,
      "detailType": "BaseChangeDetail",
      "detailInlineType": {
        "name": "BaseChangeDetail",
        "type": "object",
        "properties": [
          {
            "name": "value",
            "type": "string",
            "optional": false
          }
        ]
      }
    },
    {
      "name": "onBlur",
      "description": "Called when input focus is removed from the UI control.",
      "cancelable": false
    },
    {
      "name": "onChange",
      "description": "Called whenever a user changes the input value (by typing or pasting).\nThe event `detail` contains the current value of the field.",
      "cancelable": false,
      "detailType": "BaseChangeDetail",
      "detailInlineType": {
        "name": "BaseChangeDetail",
        "type": "object",
        "properties": [
          {
            "name": "value",
            "type": "string",
            "optional": false
          }
        ]
      }
    },
    {
      "name": "onFocus",
      "description": "Called when input focus is moved to the UI control.",
      "cancelable": false
    },
    {
      "name": "onKeyDown",
      "description": "Called when the underlying native textarea emits a `keydown` event.\nThe event `detail` contains the `keyCode` and information\nabout modifiers (that is, CTRL, ALT, SHIFT, META, etc.).",
      "cancelable": true,
      "detailType": "BaseKeyDetail",
      "detailInlineType": {
        "name": "BaseKeyDetail",
        "type": "object",
        "properties": [
          {
            "name": "altKey",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "ctrlKey",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "isComposing",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "key",
            "type": "string",
            "optional": false
          },
          {
            "name": "keyCode",
            "type": "number",
            "optional": false
          },
          {
            "name": "metaKey",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "shiftKey",
            "type": "boolean",
            "optional": false
          }
        ]
      }
    },
    {
      "name": "onKeyUp",
      "description": "Called when the underlying native textarea emits a `keyup` event.\nThe event `detail` contains the `keyCode` and information\nabout modifiers (that is, CTRL, ALT, SHIFT, META, etc.).",
      "cancelable": true,
      "detailType": "BaseKeyDetail",
      "detailInlineType": {
        "name": "BaseKeyDetail",
        "type": "object",
        "properties": [
          {
            "name": "altKey",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "ctrlKey",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "isComposing",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "key",
            "type": "string",
            "optional": false
          },
          {
            "name": "keyCode",
            "type": "number",
            "optional": false
          },
          {
            "name": "metaKey",
            "type": "boolean",
            "optional": false
          },
          {
            "name": "shiftKey",
            "type": "boolean",
            "optional": false
          }
        ]
      }
    }
  ],
  "_meta": {
    "component": "prompt-input",
    "source": "prompt-input.js",
    "extracted_at": "/Users/troymolander/Development/cloudscape-design/components/lib/components-definitions/components/prompt-input.js"
  }
}