{
  "name": "DatePicker",
  "dashCaseName": "date-picker",
  "releaseStatus": "stable",
  "regions": [],
  "functions": [
    {
      "name": "focus",
      "description": "Sets the browser focus on the UI control",
      "returnType": "void",
      "parameters": []
    }
  ],
  "properties": [
    {
      "name": "ariaDescribedby",
      "type": "string",
      "optional": true,
      "description": "Adds `aria-describedby` to the component. If you're using this component within a form field,\ndon't set this property because the form field component automatically sets it.\n\nUse this property if the component isn't surrounded by a form field, or you want to override the value\nautomatically set by the form field (for example, if you have two components within a single form field).\n\nTo use it correctly, define an ID for each element that you want to use as a description\nand set the property to a string of each ID separated by spaces (for example, `\"id1 id2 id3\"`)."
    },
    {
      "name": "ariaLabel",
      "type": "string",
      "optional": true,
      "description": "Adds an `aria-label` to the native control.\n\nUse this if you don't have a visible label for this control."
    },
    {
      "name": "ariaLabelledby",
      "type": "string",
      "optional": true,
      "description": "Adds `aria-labelledby` to the component. If you're using this component within a form field,\ndon't set this property because the form field component automatically sets it.\n\nUse this property if the component isn't surrounded by a form field, or you want to override the value\nautomatically set by the form field (for example, if you have two components within a single form field).\n\nTo use it correctly, define an ID for the element you want to use as label and set the property to that ID."
    },
    {
      "name": "ariaRequired",
      "type": "boolean",
      "optional": true,
      "description": "Specifies whether to add `aria-required` to the native control."
    },
    {
      "name": "autoFocus",
      "type": "boolean",
      "optional": true,
      "description": "Indicates whether the control should be focused as\nsoon as the page loads, which enables the user to\nstart typing without having to manually focus the control. Don't\nuse this option on pages where the control may be\nscrolled out of the viewport.",
      "defaultValue": "false"
    },
    {
      "name": "className",
      "type": "string",
      "optional": true,
      "description": "Adds the specified classes to the root element of the component.",
      "deprecatedTag": "Custom CSS is not supported. For testing and other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)."
    },
    {
      "name": "controlId",
      "type": "string",
      "optional": true,
      "description": "Specifies the ID of the native form element. You can use it to relate\na label element's `for` attribute to this control.\n\nIt defaults to an automatically generated ID that\nis provided by its parent form field component."
    },
    {
      "name": "dateDisabledReason",
      "type": "CalendarProps.DateDisabledReasonFunction",
      "inlineType": {
        "name": "CalendarProps.DateDisabledReasonFunction",
        "type": "function",
        "returnType": "string",
        "parameters": [
          {
            "name": "date",
            "type": "Date"
          }
        ]
      },
      "optional": true,
      "description": "Provides a reason why a particular date in the calendar is not enabled (only when `isDateEnabled` returns `false`).\nIf provided, the date becomes focusable."
    },
    {
      "name": "disabled",
      "type": "boolean",
      "optional": true,
      "description": "Specifies if the control is disabled, which prevents the\nuser from modifying the value and prevents the value from\nbeing included in a form submission. A disabled control can't\nreceive focus.",
      "defaultValue": "false"
    },
    {
      "name": "expandToViewport",
      "type": "boolean",
      "optional": true,
      "description": "By default, the dropdown height is constrained to fit inside the height of its next scrollable container element.\nEnabling this property will allow the dropdown to extend beyond that container by using fixed positioning and\n[React Portals](https://reactjs.org/docs/portals.html).\n\nSet this property if the dropdown would otherwise be constrained by a scrollable container,\nfor example inside table and split view layouts.\n\nWe recommend you use discretion, and don't enable this property unless necessary\nbecause fixed positioning results in a slight, visible lag when scrolling complex pages."
    },
    {
      "name": "granularity",
      "type": "string",
      "inlineType": {
        "name": "CalendarProps.Granularity",
        "type": "union",
        "values": [
          "day",
          "month"
        ]
      },
      "optional": true,
      "description": "Specifies the granularity at which users will be able to select a date.\nDefaults to `day`.",
      "defaultValue": "'day'"
    },
    {
      "name": "i18nStrings",
      "type": "CalendarProps.I18nStrings",
      "inlineType": {
        "name": "CalendarProps.I18nStrings",
        "type": "object",
        "properties": [
          {
            "name": "currentMonthAriaLabel",
            "type": "string",
            "optional": true
          },
          {
            "name": "nextMonthAriaLabel",
            "type": "string",
            "optional": true
          },
          {
            "name": "nextYearAriaLabel",
            "type": "string",
            "optional": true
          },
          {
            "name": "previousMonthAriaLabel",
            "type": "string",
            "optional": true
          },
          {
            "name": "previousYearAriaLabel",
            "type": "string",
            "optional": true
          },
          {
            "name": "todayAriaLabel",
            "type": "string",
            "optional": true
          }
        ]
      },
      "optional": true,
      "description": "An object containing all the necessary localized strings required by\nthe component.",
      "i18nTag": true
    },
    {
      "name": "id",
      "type": "string",
      "optional": true,
      "description": "Adds the specified ID to the root element of the component.",
      "deprecatedTag": "The usage of the `id` attribute is reserved for internal use cases. For testing and other use cases,\nuse [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes). If you must\nuse the `id` attribute, consider setting it on a parent element instead."
    },
    {
      "name": "invalid",
      "type": "boolean",
      "optional": true,
      "description": "Overrides the invalidation state. Usually the invalid state\ncomes from the parent `FormField`component,\nhowever sometimes you need to override its\nstate when you have more than one input within a\nsingle form field."
    },
    {
      "name": "isDateEnabled",
      "type": "CalendarProps.IsDateEnabledFunction",
      "inlineType": {
        "name": "CalendarProps.IsDateEnabledFunction",
        "type": "function",
        "returnType": "boolean",
        "parameters": [
          {
            "name": "date",
            "type": "Date"
          }
        ]
      },
      "optional": true,
      "description": "Defines whether a particular date is enabled in the calendar or not.\nIf you disable a date in the calendar, users can still enter this date using a keyboard.\nWe recommend that you also validate these constraints on the client-side and server-side\nas you would for other form elements."
    },
    {
      "name": "locale",
      "type": "string",
      "optional": true,
      "description": "Specifies the locale to use to render month names and determine the starting day of the week.\nIf you don't provide this, the locale is determined by the page and browser locales.\nSupported values and formats are listed in the\n[JavaScript Intl API specification](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#Locale_identification_and_negotiation).",
      "defaultValue": "''"
    },
    {
      "name": "name",
      "type": "string",
      "optional": true,
      "description": "Specifies the name of the control used in HTML forms."
    },
    {
      "name": "nextMonthAriaLabel",
      "type": "string",
      "optional": true,
      "description": "Specifies an `aria-label` for the 'next month' button.",
      "deprecatedTag": "Use `i18nStrings.nextMonthAriaLabel` instead."
    },
    {
      "name": "openCalendarAriaLabel",
      "type": "DatePickerProps.OpenCalendarAriaLabel",
      "inlineType": {
        "name": "DatePickerProps.OpenCalendarAriaLabel",
        "type": "function",
        "returnType": "string",
        "parameters": [
          {
            "name": "selectedDate",
            "type": "string | null"
          }
        ]
      },
      "optional": true,
      "description": "Specifies a function that generates the `aria-label` for the 'open calendar' button. The `selectedDate` parameter is\na human-readable localised string representing the current value of the input.\n(for example, ``selectedDate => 'Choose Date' + (selectedDate ? `, selected date is ${selectedDate}` : '')``)"
    },
    {
      "name": "placeholder",
      "type": "string",
      "optional": true,
      "description": "Specifies the placeholder text rendered when the value is an empty string.",
      "defaultValue": "''"
    },
    {
      "name": "previousMonthAriaLabel",
      "type": "string",
      "optional": true,
      "description": "Specifies an `aria-label` for the 'previous month' button.",
      "deprecatedTag": "Use `i18nStrings.previousMonthAriaLabel` instead."
    },
    {
      "name": "readOnly",
      "type": "boolean",
      "optional": true,
      "description": "Specifies if the control is read-only, which prevents the\nuser from modifying the value but includes it in a form\nsubmission. A read-only control can receive focus.\n\nDo not use read-only inputs outside of a form.",
      "defaultValue": "false"
    },
    {
      "name": "startOfWeek",
      "type": "number",
      "optional": true,
      "description": "Determines the starting day of the week. The values 0-6 map to Sunday-Saturday.\nBy default the starting day of the week is defined by the locale, but you can use this property to override it."
    },
    {
      "name": "todayAriaLabel",
      "type": "string",
      "optional": true,
      "description": "Used as part of the `aria-label` for today's date in the calendar.",
      "deprecatedTag": "Use `i18nString.todayAriaLabel` instead."
    },
    {
      "name": "value",
      "type": "string",
      "optional": false,
      "description": "The current input value, in YYYY-MM-DD format.",
      "defaultValue": "''"
    },
    {
      "name": "warning",
      "type": "boolean",
      "optional": true,
      "description": "Overrides the warning state. Usually the warning state\ncomes from the parent `FormField`component,\nhowever sometimes you need to override its\nstate when you have more than one input within a\nsingle form field.\nWhen you use it, provide additional context with\ninformation on the input state, and associate it\nwith the input using `ariaDescribedby`."
    }
  ],
  "events": [
    {
      "name": "onBlur",
      "description": "Called when input focus is removed from the UI control.",
      "cancelable": false
    },
    {
      "name": "onChange",
      "description": "Called whenever a user changes the input value (by typing, pasting, or selecting a value).\nThe event `detail` contains the current value of the field.",
      "cancelable": false,
      "detailType": "CalendarProps.ChangeDetail",
      "detailInlineType": {
        "name": "CalendarProps.ChangeDetail",
        "type": "object",
        "properties": [
          {
            "name": "value",
            "type": "string",
            "optional": false
          }
        ]
      }
    },
    {
      "name": "onFocus",
      "description": "Called when input focus is moved to the UI control.",
      "cancelable": false
    }
  ],
  "_meta": {
    "component": "date-picker",
    "source": "date-picker.js",
    "extracted_at": "/Users/troymolander/Development/cloudscape-design/components/lib/components-definitions/components/date-picker.js"
  }
}