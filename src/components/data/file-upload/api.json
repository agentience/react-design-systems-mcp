{
  "name": "FileUpload",
  "dashCaseName": "file-upload",
  "releaseStatus": "stable",
  "regions": [
    {
      "name": "constraintText",
      "description": "Constraint text that is displayed below the control. Use this to provide additional information about file size limit, etc.",
      "isDefault": false
    },
    {
      "name": "errorText",
      "description": "Text that displays as a validation error message.",
      "isDefault": false
    },
    {
      "name": "warningText",
      "description": "Text that displays as a validation warning message.",
      "isDefault": false
    }
  ],
  "functions": [
    {
      "name": "focus",
      "description": "Sets focus on the file upload button.",
      "returnType": "void",
      "parameters": []
    }
  ],
  "properties": [
    {
      "name": "accept",
      "type": "string",
      "optional": true,
      "description": "Specifies the native file input `accept` attribute to describe the allow-list of file types."
    },
    {
      "name": "ariaDescribedby",
      "type": "string",
      "optional": true,
      "description": "Adds `aria-describedby` to the component. If you're using this component within a form field,\ndon't set this property because the form field component automatically sets it.\n\nUse this property if the component isn't surrounded by a form field, or you want to override the value\nautomatically set by the form field (for example, if you have two components within a single form field).\n\nTo use it correctly, define an ID for each element that you want to use as a description\nand set the property to a string of each ID separated by spaces (for example, `\"id1 id2 id3\"`)."
    },
    {
      "name": "ariaLabelledby",
      "type": "string",
      "optional": true,
      "description": "Adds `aria-labelledby` to the component. If you're using this component within a form field,\ndon't set this property because the form field component automatically sets it.\n\nUse this property if the component isn't surrounded by a form field, or you want to override the value\nautomatically set by the form field (for example, if you have two components within a single form field).\n\nTo use it correctly, define an ID for the element you want to use as label and set the property to that ID."
    },
    {
      "name": "ariaRequired",
      "type": "boolean",
      "optional": true,
      "description": "Specifies whether to add aria-required to the file upload control."
    },
    {
      "name": "className",
      "type": "string",
      "optional": true,
      "description": "Adds the specified classes to the root element of the component.",
      "deprecatedTag": "Custom CSS is not supported. For testing and other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)."
    },
    {
      "name": "controlId",
      "type": "string",
      "optional": true,
      "description": "Specifies the ID of the native form element. You can use it to relate\na label element's `for` attribute to this control.\n\nIt defaults to an automatically generated ID that\nis provided by its parent form field component."
    },
    {
      "name": "fileErrors",
      "type": "ReadonlyArray<string | null>",
      "optional": true,
      "description": "An array of file errors corresponding to the files in the `value`."
    },
    {
      "name": "fileTokenAlignment",
      "type": "string",
      "inlineType": {
        "name": "FileUploadProps.FileTokenAlignment",
        "type": "union",
        "values": [
          "horizontal",
          "vertical"
        ]
      },
      "optional": true,
      "description": "Alignment of the file tokens. Defaults to \"vertical\"."
    },
    {
      "name": "fileWarnings",
      "type": "ReadonlyArray<string | null>",
      "optional": true,
      "description": "An array of file warnings corresponding to the files in the `value`."
    },
    {
      "name": "i18nStrings",
      "type": "FileUploadProps.I18nStrings",
      "inlineType": {
        "name": "FileUploadProps.I18nStrings",
        "type": "object",
        "properties": [
          {
            "name": "dropzoneText",
            "type": "((multiple: boolean) => string)",
            "optional": true
          },
          {
            "name": "errorIconAriaLabel",
            "type": "string",
            "optional": true
          },
          {
            "name": "formatFileLastModified",
            "type": "((date: Date) => string)",
            "optional": true
          },
          {
            "name": "formatFileSize",
            "type": "((sizeInBytes: number) => string)",
            "optional": true
          },
          {
            "name": "limitShowFewer",
            "type": "string",
            "optional": true
          },
          {
            "name": "limitShowMore",
            "type": "string",
            "optional": true
          },
          {
            "name": "removeFileAriaLabel",
            "type": "((fileIndex: number) => string)",
            "optional": true
          },
          {
            "name": "uploadButtonText",
            "type": "((multiple: boolean) => string)",
            "optional": true
          },
          {
            "name": "warningIconAriaLabel",
            "type": "string",
            "optional": true
          }
        ]
      },
      "optional": true,
      "description": "An object containing all the localized strings required by the component:\n* `uploadButtonText` (function): A function to render the text of the file upload button. It takes `multiple` attribute to define plurality.\n* `dropzoneText` (function): A function to render the text shown in the dropzone. It takes `multiple` attribute to define plurality.\n* `removeFileAriaLabel` (function): A function to render the ARIA label for file token remove button.\n* `limitShowFewer` (string): The text of the show more tokens button.\n* `limitShowMore` (string): The text of the show fewer tokens button.\n* `errorIconAriaLabel` (string): The ARIA label to be shown on the error file icon.\n* `warningIconAriaLabel` (string): The ARIA label to be shown on the warning file icon.\n* `formatFileSize` (function): (Optional) A function that takes file size in bytes, and produces a formatted string.\n* `formatFileLastModified` (function): (Optional) A function that takes the files last modified date, and produces a formatted string."
    },
    {
      "name": "id",
      "type": "string",
      "optional": true,
      "description": "Adds the specified ID to the root element of the component.",
      "deprecatedTag": "The usage of the `id` attribute is reserved for internal use cases. For testing and other use cases,\nuse [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes). If you must\nuse the `id` attribute, consider setting it on a parent element instead."
    },
    {
      "name": "invalid",
      "type": "boolean",
      "optional": true,
      "description": "Overrides the invalidation state. Usually the invalid state\ncomes from the parent `FormField`component,\nhowever sometimes you need to override its\nstate when you have more than one input within a\nsingle form field."
    },
    {
      "name": "multiple",
      "type": "boolean",
      "optional": true,
      "description": "Specifies the native file input `multiple` attribute to allow users entering more than one file."
    },
    {
      "name": "showFileLastModified",
      "type": "boolean",
      "optional": true,
      "description": "Show file last modified timestamp in the token. Use `i18nStrings.formatFileLastModified` to customize it."
    },
    {
      "name": "showFileSize",
      "type": "boolean",
      "optional": true,
      "description": "Show file size in the token. Use `i18nStrings.formatFileSize` to customize it."
    },
    {
      "name": "showFileThumbnail",
      "type": "boolean",
      "optional": true,
      "description": "Show file thumbnail in the token. Only supported for images."
    },
    {
      "name": "tokenLimit",
      "type": "number",
      "optional": true,
      "description": "Specifies the maximum number of displayed file tokens. If the property isn't set, all of the tokens are displayed."
    },
    {
      "name": "value",
      "type": "ReadonlyArray<File>",
      "optional": false,
      "description": "Specifies the currently selected file(s).\nIf you want to clear the selection, use empty array."
    }
  ],
  "events": [
    {
      "name": "onChange",
      "description": "Called when the user selects new file(s), or removes a file.\nThe event `detail` contains the current value of the component.",
      "cancelable": false,
      "detailType": "FileUploadProps.ChangeDetail",
      "detailInlineType": {
        "name": "FileUploadProps.ChangeDetail",
        "type": "object",
        "properties": [
          {
            "name": "value",
            "type": "Array<File>",
            "optional": false
          }
        ]
      }
    }
  ],
  "_meta": {
    "component": "file-upload",
    "source": "file-upload.js",
    "extracted_at": "/Users/troymolander/Development/cloudscape-design/components/lib/components-definitions/components/file-upload.js"
  }
}