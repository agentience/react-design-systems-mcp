{
  "name": "TextFilter",
  "dashCaseName": "text-filter",
  "releaseStatus": "stable",
  "regions": [],
  "functions": [
    {
      "name": "focus",
      "description": "Sets focus on the underlying input control.",
      "returnType": "void",
      "parameters": []
    }
  ],
  "properties": [
    {
      "name": "ariaDescribedby",
      "type": "string",
      "optional": true,
      "description": "Adds `aria-describedby` to the component. If you're using this component within a form field,\ndon't set this property because the form field component automatically sets it.\n\nUse this property if the component isn't surrounded by a form field, or you want to override the value\nautomatically set by the form field (for example, if you have two components within a single form field).\n\nTo use it correctly, define an ID for each element that you want to use as a description\nand set the property to a string of each ID separated by spaces (for example, `\"id1 id2 id3\"`)."
    },
    {
      "name": "ariaLabelledby",
      "type": "string",
      "optional": true,
      "description": "Adds `aria-labelledby` to the component. If you're using this component within a form field,\ndon't set this property because the form field component automatically sets it.\n\nUse this property if the component isn't surrounded by a form field, or you want to override the value\nautomatically set by the form field (for example, if you have two components within a single form field).\n\nTo use it correctly, define an ID for the element you want to use as label and set the property to that ID."
    },
    {
      "name": "className",
      "type": "string",
      "optional": true,
      "description": "Adds the specified classes to the root element of the component.",
      "deprecatedTag": "Custom CSS is not supported. For testing and other use cases, use [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes)."
    },
    {
      "name": "controlId",
      "type": "string",
      "optional": true,
      "description": "Specifies the ID of the native form element. You can use it to relate\na label element's `for` attribute to this control.\n\nIt defaults to an automatically generated ID that\nis provided by its parent form field component."
    },
    {
      "name": "countText",
      "type": "string",
      "optional": true,
      "description": "Accepts a human-readable, localized string that indicates the number of results. For example, \"1 match\" or \"165 matches.\"\nIf the total number of results is unknown, also include an indication that there may be more results than\nthe number listed. For example, \"25+ matches.\"\n\nThe count text is only displayed when `filteringText` isn't empty.\nWhen the `countText` or `filteringText` changes, it will be announced to assistive technologies."
    },
    {
      "name": "disableBrowserAutocorrect",
      "type": "boolean",
      "optional": true,
      "description": "Specifies whether to disable browser autocorrect and related features.\nIf you set this to `true`, it disables any native browser capabilities\nthat automatically correct user input, such as `autocorrect` and\n`autocapitalize`. If you don't set it, the behavior follows the default behavior\nof the user's browser."
    },
    {
      "name": "disabled",
      "type": "boolean",
      "optional": true,
      "description": "Specifies if the filtering input is disabled.\nFor example, you can use it if you are fetching new items upon filtering change\nin order to prevent the user from changing the filtering text."
    },
    {
      "name": "filteringAriaLabel",
      "type": "string",
      "optional": true,
      "description": "Adds an `aria-label` on the filtering input."
    },
    {
      "name": "filteringClearAriaLabel",
      "type": "string",
      "optional": true,
      "description": "Label for the filtering input clear button."
    },
    {
      "name": "filteringPlaceholder",
      "type": "string",
      "optional": true,
      "description": "Placeholder for the filtering input."
    },
    {
      "name": "filteringText",
      "type": "string",
      "optional": false,
      "description": "The current value of the filtering input."
    },
    {
      "name": "id",
      "type": "string",
      "optional": true,
      "description": "Adds the specified ID to the root element of the component.",
      "deprecatedTag": "The usage of the `id` attribute is reserved for internal use cases. For testing and other use cases,\nuse [data attributes](https://developer.mozilla.org/en-US/docs/Learn/HTML/Howto/Use_data_attributes). If you must\nuse the `id` attribute, consider setting it on a parent element instead."
    },
    {
      "name": "loading",
      "type": "boolean",
      "optional": true,
      "description": "Set to `true` while the related collection is loading (e.g. during an async filtering action).\nIf set to `true`, the live announcement of countText by assistive technologies will be paused until it changes back to `false`."
    }
  ],
  "events": [
    {
      "name": "onChange",
      "description": "Called when a change in filtering is caused by a user interaction. The event `detail` contains the current `filteringText`.",
      "cancelable": false,
      "detailType": "TextFilterProps.ChangeDetail",
      "detailInlineType": {
        "name": "TextFilterProps.ChangeDetail",
        "type": "object",
        "properties": [
          {
            "name": "filteringText",
            "type": "string",
            "optional": false
          }
        ]
      }
    },
    {
      "name": "onDelayedChange",
      "description": "Called after the user changes the value of the filtering input field and stops typing for a certain\nperiod of time. If you want a delayed handler to invoke a filtering API call, you can use this event in addition to `onChange`.",
      "cancelable": false,
      "detailType": "TextFilterProps.ChangeDetail",
      "detailInlineType": {
        "name": "TextFilterProps.ChangeDetail",
        "type": "object",
        "properties": [
          {
            "name": "filteringText",
            "type": "string",
            "optional": false
          }
        ]
      }
    }
  ],
  "_meta": {
    "component": "text-filter",
    "source": "text-filter.js",
    "extracted_at": "/Users/troymolander/Development/cloudscape-design/components/lib/components-definitions/components/text-filter.js"
  }
}